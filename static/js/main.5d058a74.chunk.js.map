{"version":3,"sources":["firebase.js","routes/Auth.js","redux/modules/calendar.js","Calendar.js","routes/Detail.js","routes/Profile.js","components/ChatEvent.js","routes/UploadChat.js","components/CustomizedApp.js","routes/Chat.js","CalendarFind.js","components/Router.js","components/App.js","reportWebVitals.js","redux/configStore.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","authService","auth","firebaseInstance","Auth","onSocialClick","event","a","target","name","provider","GoogleAuthProvider","signInWithPopup","data","console","log","user","userInfo","displayName","email","uid","localStorage","setItem","JSON","stringify","docRef","collection","doc","get","then","exists","set","catch","error","className","onClick","calendar_db","userChatUrl","getItem","userChatUrlList","parse","abc","i","push","chatUrl","my_calendar","where","initialState","list","getCalendarFB","dispatch","docs","calendar_data","forEach","id","type","getCalendar","Calendar","props","useDispatch","useSelector","state","calendar","useEffect","data_list","map","val","title","date","publicId","completed","color","completedDate","filter","useState","btn","plugins","dayGridPlugin","headerToolbar","start","center","end","titleFormat","year","month","events","eventClick","e","history","_def","extendedProps","height","Container","styled","div","Container2","Modal","GoBack","BtnGroup","Detail","isOwner","setIsOwner","userUid","primaryData","creatorId","calendarId","match","params","defid","length","goBack","style","split","Button","variant","marginRight","getState","primary_data","calendar_arr","delete","res","deleteCalendar","window","alert","marginTop","calendarData","update","updateCalendar","replace","useHistory","userObj","newDisplayName","setNewDisplayName","onSubmit","preventDefault","displaName","updateProfile","refreshUser","onChange","value","autoFocus","placeholder","signOut","removeItem","ChatEvent","chatEvent","setChatEvent","channelUrl","chatEventList","myContentArray","eventList","Upload","dateTime","useRef","plan","TextField","marginBottom","label","defaultValue","InputLabelProps","shrink","inputRef","borderRadius","border","padding","fontSize","ref","display","new_item","current","planning","add","withSendBird","stores","sdkStore","userStore","config","isOnline","userId","accessToken","theme","userListQuery","logger","pubSub","useCallback","initialized","sdk","loading","logDefaultProps","showSettings","setShowSettings","currentChannelUrl","setCurrentChannelUrl","setDisplay","onChannelSelect","channel","url","onChatHeaderActionClick","width","UploadChat","onCloseClick","Chat","USER_ID","NICKNAME","nickname","CalendarFind","PositionBtnChat","PositionBtnProfile","CalendarViewBtn","withRouter","isLoggedIn","UserJoinedChannels","sb","SendBird","localCacheEnabled","connect","listQuery","GroupChannel","createMyGroupChannelListQuery","includeEmpty","userIdsIncludeFilter","next","groupChannels","myEventList","path","exact","Fab","aria-label","render","Profile","component","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","currentUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middlewawres","createBrowserHistory","thunk","enhancer","applyMiddleware","rootReducer","combineReducers","action","Set","calendar_list","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5d058a74.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_D0MAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst firestore = firebase.firestore();\nexport { firestore };\nexport const authService = firebase.auth();\nexport const firebaseInstance = firebase;\n\n\n","import { authService, firebaseInstance, firestore } from \"../firebase\";\nimport React from \"react\";\n\nconst Auth = () => { \n  \n  const onSocialClick = async (event) => {\n    const{\n      target: { name },\n    } = event;\n    //새로운 소셜 로그인 추가시 else써서 추가\n    let provider;\n    if(name === \"google\"){\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n    console.log(data.user);\n    \n    var userInfo = {\n      displayName: data.user.displayName,\n      email: data.user.email,\n      uid: data.user.uid,\n    }\n\n    localStorage.setItem('user', JSON.stringify(userInfo));\n\n    var docRef = firestore.collection(\"users\").doc(data.user.uid);\n\n    await docRef.get().then((doc) => {\n        if (doc.exists) {\n            console.log(\"Welcome again!\");\n        } else {\n            // doc.data() will be undefined in this case\n            firestore.collection('users').doc(data.user.uid).set(userInfo);\n            console.log(\"Welcome!\");\n        }\n    }).catch((error) => {\n        console.log(\"Error getting document:\", error);\n    });\n  }\n\n\n\n  return ( \n    <div className=\"authContainer\">\n\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n           Continue with Google\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default Auth;","import { firestore } from '../../firebase';\n// import { useEffect } from 'react';\n// import APP_ID from '../../SendBird'\n// import SendbirdChat from '@sendbird/chat'\n\n\nconst calendar_db = firestore.collection('calendar');\n// const user = localStorage.getItem('user');\n// const userUid = JSON.parse(user).uid;\nconst userChatUrl = localStorage.getItem('userChatUrl');\nconst userChatUrlList = JSON.parse(userChatUrl);\nconst abc = [];\nfor (let i in userChatUrlList) {\n  abc.push(userChatUrlList[i].chatUrl)\n}\n// 파이어베이스 \"in\" 쿼리에서는 빈 객체는 안됨\nabc.push(\"none\")\n\nconst my_calendar = firestore.collection('calendar').where('planning', 'in', abc);\n\n\n// action\nconst GET_CALENDAR = 'calendar/GET_CALENDAR';\nconst UPLOAD = 'calendar/UPLOAD';\nconst DELETE = 'calendar/DELETE';\nconst UPDATE = 'calendar/UPDATE';\n\nconst RESET = 'calendar/RESET';\n\nconst initialState = {\n  list: [],\n};\n// action creator\nexport const getCalendar = (data) => {\n  return { type: GET_CALENDAR, data };\n};\n\nexport const createCalendar = (data) => {\n  return { type: UPLOAD, data };\n};\nexport const deleteCalendar = (id) => {\n  return { type: DELETE, id };\n};\nexport const updateCalendar = (id) => {\n  return { type: UPDATE, id };\n};\n\nexport const resetCalendar = () => {\n  return { type: RESET}\n};\n// firebase\nexport const getCalendarFB = (data) => {\n  return function (dispatch) {\n    my_calendar.get().then((docs) => {\n      let calendar_data = [];\n      docs.forEach((doc) => {\n        if (doc.exists) {\n          calendar_data = [...calendar_data, { id: doc.id, ...doc.data() }];\n        }\n      });\n      dispatch(getCalendar(calendar_data));\n    });\n  };\n};\nexport const addCalendarFB = (data) => {\n  return function (dispatch) {\n    let calendar_data = {\n      date: data.date,\n      title: data.title,\n      completed: false,\n      creatorId: data.creatorId,\n      planning: data.planning,\n    };\n    calendar_db\n      .add(calendar_data)\n      .then((res) => {\n        calendar_data = { ...calendar_data, id: res.id };\n        console.log(calendar_data.creatorId);\n      })\n      .catch((e) => {\n        console.log(e);\n        window.alert('에러가 발생했습니다. 나중에 다시 시도해주세요!');\n      });\n  };\n};\nexport const deleteCalendarFB = (id) => {\n  return function (dispatch, getState) {\n    const calendar_arr = getState().calendar.list;\n    let primary_data;\n    for (let i = 0; i < calendar_arr.length; i++) {\n      if (calendar_arr[i].id === id) {\n        primary_data = calendar_arr[i];\n      }\n    }\n    if (!primary_data.id) {\n      return;\n    }\n    calendar_db\n      .doc(primary_data.id)\n      .delete()\n      .then((res) => {\n        dispatch(deleteCalendar(id));\n      })\n      .catch((e) => {\n        console.log(e);\n        window.alert('에러가 발생했습니다. 나중에 다시 시도해 주세요!');\n      });\n  };\n};\n\nexport const updateCalendarFB = (id) => {\n  return function (dispatch, getState) {\n    const calendar_arr = getState().calendar.list;\n    let primary_data;\n    for (let i = 0; i < calendar_arr.length; i++) {\n      if (calendar_arr[i].id === id) {\n        primary_data = calendar_arr[i];\n      }\n    }\n    let calendarData = {\n      title: primary_data.title,\n      date: primary_data.date,\n      completed: true,\n    };\n\n    if (!primary_data.id) {\n      return;\n    }\n    calendar_db\n      .doc(primary_data.id)\n      .update(calendarData)\n      .then((res) => {\n        dispatch(updateCalendar(id));\n      });\n  };\n};\n\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case 'calendar/GET_CALENDAR': {\n      const data = [...new Set([...action.data])];\n      return { list: data };\n    }\n\n    case 'calendar/UPLOAD': {\n      const new_item = [...state.list, action.data];\n      return { list: new_item };\n    }\n    case 'calendar/DELETE': {\n      // eslint-disable-next-line array-callback-return\n      const calendar_list = state.list.filter((val) => {\n        if (val.id !== action.calendar) {\n          return val;\n        }\n      });\n      return { list: calendar_list };\n    }\n    case 'calendar/UPDATE': {\n      const calendar_list = state.list.map((val) => {\n        if (val.id === action.id) {\n          return { ...val, completed: true };\n        } else {\n          return val;\n        }\n      });\n      return { list: calendar_list };\n    }\n\n    case 'calendar/RESET': {\n      return { list: [] };\n    }\n\n    default:\n      return state;\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCalendarFB } from './redux/modules/calendar';\n\nfunction Calendar(props) {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => state.calendar.list);\n\n  useEffect(() => {\n    dispatch(getCalendarFB());\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  \n  const data_list = data.map((val) => {\n    return {\n      title: val.title,\n      date: val.date,\n      publicId: val.id,\n      completed: val.completed,\n      color: val.completed ? '#E74C3C' : '#ABEBC6',\n    };\n  });\n\n  const completedDate = data_list.filter((val) => {\n    return val.completed === true;\n  });\n\n  const [btn, setBtn] = useState(true);\n\n\n  return (\n    <div>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        headerToolbar={{\n          start: 'prev next today',\n          center: 'title',\n          end: '',\n        }}\n        titleFormat={{ year: 'numeric', month: 'short' }}\n        events={btn ? data_list : completedDate}\n        eventClick={(e) => {\n          props.history.push('/detail/' + e.event._def.extendedProps.publicId);\n        }}\n        height={'100vh'}\n      />\n    </div>\n  );\n}\n\nexport default Calendar;\n","import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport RedditIcon from '@material-ui/icons/Reddit';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getCalendarFB,\n  deleteCalendarFB,\n  updateCalendarFB,\n} from '../redux/modules/calendar';\n\nfunction Detail(props) {\n  const dispatch = useDispatch();\n  const [isOwner, setIsOwner] = useState(false); \n  const data = useSelector((state) => state.calendar.list);\n  useEffect(() => {\n    dispatch(getCalendarFB());\n    if (userUid === primaryData.creatorId) {\n      setIsOwner(true);\n    } else {\n      setIsOwner(false);\n    }\n    console.log(userUid);\n    console.log(\"isOwner is\" + isOwner);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const user = localStorage.getItem('user');\n  const userUid = JSON.parse(user).uid;\n\n  let calendarId = props.match.params.defid;\n\n  let primaryData;\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].id === calendarId) {\n      primaryData = data[i];\n    }\n  }\n\n\n  return (\n    <>\n      <Container>\n        <Modal>\n          <GoBack\n            onClick={() => {\n              props.history.goBack();\n            }}\n          >\n            <ExitToAppIcon style={{ color: '#EC7063' }} />\n          </GoBack>\n          <h1>\n            <AlarmIcon /> &nbsp;상세 일정 보기\n          </h1>\n          <h2>\n            <CalendarTodayIcon style={{ color: '#85C1E9' }} />\n            &nbsp; 날짜: {primaryData\n              ? primaryData.date.split('T')[0]\n              : ' '}{' '}\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            {primaryData\n              ? primaryData.date.split('T')[1].split(':')[0] > 11\n                ? '오후'\n                : '오전'\n              : ''}\n            &nbsp;&nbsp;\n            {primaryData\n              ? primaryData.date.split('T')[1].split(':')[0] > 12\n                ? primaryData.date.split('T')[1].split(':')[0] -\n                  12 +\n                  ':' +\n                  primaryData.date.split('T')[1].split(':')[1]\n                : primaryData.date.split('T')[1].split(':')[0] +\n                  ':' +\n                  primaryData.date.split('T')[1].split(':')[1]\n              : ''}\n          </h2>\n          <h2>\n            <RedditIcon style={{ color: '#85C1E9' }} />\n            &nbsp; 이벤트: {primaryData ? primaryData.title : ''}\n          </h2>\n          <hr />\n\n          <BtnGroup>\n\n            {isOwner && (\n            <Button\n              variant='contained'\n              style={{ marginRight: '50px' }}\n              onClick={() => {\n                dispatch(deleteCalendarFB(calendarId));\n                props.history.goBack();\n              }}\n            >\n              이벤트 삭제\n            </Button>\n            )}\n            <Button\n              variant='contained'\n              color='primary'\n              style={{ marginTop: '5px' }}\n              onClick={() => {\n                dispatch(updateCalendarFB(calendarId));\n                props.history.goBack();\n              }}\n            >\n              이벤트 완료\n            </Button>\n          </BtnGroup>\n        </Modal>\n      </Container>\n      <Container2\n        onClick={() => {\n          props.history.replace('/');\n        }}\n      />\n    </>\n  );\n}\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Container2 = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\nconst Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  padding: 24px 50px;\n  border-radius: 4px;\n  width: 600px;\n  height: 400px;\n  box-sizing: border-box;\n  z-index: 10;\n  & h1 {\n    text-align: center;\n    color: #af7ac5;\n  }\n  & h2 {\n    color: #34495e;\n  }\n\n  & Button {\n    min-width: 200px;\n  }\n`;\nconst GoBack = styled.div`\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  position: relative;\n  left: -30px;\n`;\nconst BtnGroup = styled.div`\n  margin: 0 auto;\n  @media only screen and (max-width: 768px) {\n    & Button {\n      width: 100%;\n    }\n  }\n`;\n\nexport default Detail;\n","import { authService } from \"../firebase\";\nimport React, { useState , useEffect} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\nimport { resetCalendar } from '../redux/modules/calendar';\n\nexport default (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(props.userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    dispatch(resetCalendar());\n    localStorage.removeItem('user');\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if(props.userObj.displaName !== newDisplayName) {\n      await props.userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      props.refreshUser();\n    };\n    history.push(\"/\");\n  };\n\n  useEffect(()=>{\n    console.log('profile');\n    console.log(props.userObj)\n  })\n\nreturn(\n  <div className=\"container\">\n    <form onSubmit={onSubmit} className=\"profileForm\">\n      <input \n        onChange={onChange} \n        type=\"text\" \n        autoFocus \n        placeholder=\"Display name\" \n        value={newDisplayName} \n        className=\"formInput\"\n        />\n      <input\n        type=\"submit\"\n        value=\"프로필 수정 완료\"\n        className=\"formBtn\"\n        style={{\n          marginTop: 10,\n        }}\n      />\n    </form>\n    <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n    </span>\n  </div>\n)\n};","import React, { useState } from \"react\";\nimport {firestore} from '../firebase';\n\n\n\nconst ChatEvent = (props) => {\n\n  const [chatEvent, setChatEvent] = useState([]);\n\n  firestore.collection(\"calendar\").where('planning', '==', props.channelUrl).get().then((chatEventList)=>{\n    const myContentArray = chatEventList.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n    setChatEvent(myContentArray);\n  });\n\n  \n    return (\n    <div className=\"event-list\">\n      {chatEvent.map((eventList) =>\n        <div className=\"chat-event\">\n          <h4>{eventList.title}</h4>\n          <div>{eventList.date}</div>\n        </div>\n      )}\n      <div></div>\n    </div>\n    );\n\n}\n\n\nexport default ChatEvent;\n\n\n\n\n","import React, { useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport TextField from '@material-ui/core/TextField';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { addCalendarFB } from '../redux/modules/calendar';\n\nfunction Upload(props) {\n  const dateTime = useRef();\n  const plan = useRef();\n\n  const dispatch = useDispatch();\n\n\n  // const user = localStorage.getItem('user');\n  // const userName = JSON.parse(user).uid;\n\n  const addContent = () => {\n    const new_item = {\n      date: dateTime.current.value,\n      title: plan.current.value,\n      completed: false,\n      creatorId: props.userObj.uid,\n      planning: props.planning,\n    };\n    if (new_item.date === '') {\n      window.alert('날짜를 입력해주세요');\n      return;\n    } else if (new_item.title === '') {\n      window.alert('이벤트를 입력해주세요');\n      return;\n    }\n    console.log(dateTime.current.value);\n    dispatch(addCalendarFB(new_item));\n    window.alert('이벤트가 추가되었습니다!');\n    props.display('none');\n  \n    return;\n\n  };\n\n\n\n\n  return (\n    <>\n      <Container>\n        <Modal>\n          <h1>\n            <BorderColorIcon /> &nbsp;이벤트 추가하기\n          </h1>\n          <hr />\n          <TextField\n            style={{ marginBottom: '3rem' }}\n            label='날짜를 추가해주세요'\n            type='datetime-local'\n            defaultValue='0000-00-00T00:00'\n            InputLabelProps={{\n              shrink: true,\n            }}\n            inputRef={dateTime}\n          />\n          <input\n            type='text'\n            style={{\n              borderRadius: '5px',\n              border: '1px solid #888',\n              padding: '16px',\n              fontSize: '16px',\n              marginBottom: '3rem',\n            }}\n            placeholder='이벤트를 입력해주세요.'\n            ref={plan}\n          />\n\n          <BtnGroup>\n            <Button\n              variant='contained'\n              style={{ marginRight: '50px' }}\n              onClick={() => {\n                props.display('none');\n              }}\n            >\n              뒤로가기\n            </Button>\n            <Button\n              variant='contained'\n              color='primary'\n              style={{ marginTop: '5px' }}\n              onClick={addContent}\n            >\n              이벤트 추가\n            </Button>\n          </BtnGroup>\n        </Modal>\n      </Container>\n      {/* <Container2\n        onClick={() => {\n          props.history.replace('/');\n        }}\n      /> */}\n    </>\n  );\n}\n\nconst Container = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  padding: 24px 50px;\n  border-radius: 4px;\n  width: 800px;\n  height: 400px;\n  box-sizing: border-box;\n  z-index: 10;\n  & h1 {\n    text-align: center;\n    color: #af7ac5;\n  }\n\n  & Button {\n    min-width: 200px;\n  }\n`;\nconst BtnGroup = styled.div`\n  margin: 0 auto;\n  @media only screen and (max-width: 768px) {\n    & Button {\n      width: 100%;\n    }\n  }\n`;\n\nexport default Upload;\n","import React, { useState, useCallback} from \"react\";\nimport ChatEvent from './ChatEvent';\nimport UploadChat from \"../routes/UploadChat\";\n\nimport {\n  Channel as SBConversation,\n  ChannelList as SBChannelList,\n  ChannelSettings as SBChannelSettings,\n  withSendBird\n} from \"sendbird-uikit\";\n\nfunction CustomizedApp(props) {\n  // default props\n  const {\n    stores: { sdkStore, userStore },\n    config: {\n      isOnline,\n      userId,\n      appId,\n      accessToken,\n      theme,\n      userListQuery,\n      logger,\n      pubSub\n    }\n  } = props;\n  const logDefaultProps = useCallback(() => {\n    console.log(\n      \"SDK store list log\",\n      sdkStore.initialized,\n      sdkStore.sdk,\n      sdkStore.loading,\n      sdkStore.error\n    );\n    console.log(\n      \"User store list log\",\n      userStore.initialized,\n      userStore.user,\n      userStore.loading\n    );\n    console.log(\n      \"Config list log\",\n      isOnline,\n      userId,\n      appId,\n      accessToken,\n      theme,\n      userListQuery,\n      logger,\n      pubSub\n    );\n  }, [\n    sdkStore.initialized,\n    sdkStore.sdk,\n    sdkStore.loading,\n    sdkStore.error,\n    userStore.initialized,\n    userStore.user,\n    userStore.loading,\n    isOnline,\n    userId,\n    appId,\n    accessToken,\n    theme,\n    userListQuery,\n    logger,\n    pubSub\n  ]);\n  logDefaultProps();\n\n  // useState\n  const [showSettings, setShowSettings] = useState(false);\n  const [currentChannelUrl, setCurrentChannelUrl] = useState(\"\");\n  const [display, setDisplay] = useState(['none']);\n  console.log(currentChannelUrl);\n\n\n  return (\n    <div className=\"customized-app\">\n      <div className=\"sendbird-app__wrap\">\n        <div className=\"sendbird-app__channellist-wrap\">\n          <SBChannelList\n            onChannelSelect={(channel) => {\n              console.log(\"channel\", channel);\n              if (channel && channel.url) {\n                setCurrentChannelUrl(channel.url);\n              }\n            }}\n          />\n        </div>\n        <div className=\"sendbird-app__conversation-wrap\">\n          <SBConversation\n            channelUrl={currentChannelUrl}\n            onChatHeaderActionClick={() => {\n              setShowSettings(true);\n            }}\n          />\n        </div>\n        <div className=\"sendbird-app_eventlist\">\n          <div style={{ marginTop: 30 }}>\n              <ChatEvent channelUrl={currentChannelUrl} />\n          </div>\n          <button onClick={() => setDisplay('block')}>+</button>\n          <div className=\"chatEventUploadForm\" style={{display: `${display}`, width:'50%'}}>\n            <UploadChat \n              planning={currentChannelUrl}\n              display={setDisplay}\n              userObj={props.userObj}\n            />\n          </div>\n        </div>\n      </div>\n      {showSettings && (\n        <div className=\"sendbird-app__settingspanel-wrap\">\n          <SBChannelSettings\n            channelUrl={currentChannelUrl}\n            onCloseClick={() => {\n              setShowSettings(false);\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\n\nexport default withSendBird(CustomizedApp);\n","import React from \"react\";\nimport { SendBirdProvider as SBProvider } from \"sendbird-uikit\";\nimport \"sendbird-uikit/dist/index.css\";\n\nimport CustomizedApp from \"../components/CustomizedApp\";\nimport \"../style.css\";\n\n\n\nexport default function Chat(props) {\n  const APP_ID = \"955C3A3C-AAB3-453E-B6C2-FC26DB354F2E\";\n  const USER_ID = props.userObj.email;\n  const NICKNAME = props.userObj.displayName\n\n  return (\n    <SBProvider appId={APP_ID} userId={USER_ID} nickname={NICKNAME} userObj={props.userObj} >\n      <CustomizedApp  userObj={props.userObj} />\n    </SBProvider>\n  );\n}\n\n\n\n\n\n\n\n\n// export default function Chat() {\n//     return (\n//         <ChatMain>\n//             <SendBirdApp\n//                 // Add the two lines below.\n//                 appId={APP_ID}    // Specify your Sendbird application ID.\n//                 userId={USER_ID}    // Specify your user ID.\n//             />\n//         </ChatMain>\n//     );\n// };\n\n// const ChatMain = styled.div`\n//   Font-family: sans-serif;\n//   Text-align: center;\n//   height: 100vh;   // Add this line.\n//   width: 100vw;\n// `;","import React, { useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport TextField from '@material-ui/core/TextField';\nimport styled from 'styled-components';\n\n\nfunction CalendarFind() {\n  const dateTime = useRef();\n\n  return (\n    <>\n      <Container>\n        <Modal>\n          <h1>\n            <BorderColorIcon /> &nbsp;이벤트 검색하기\n          </h1>\n          <hr />\n          <TextField\n            style={{ marginBottom: '3rem' }}\n            label='날짜를 추가해주세요'\n            type='date'\n            defaultValue='0000-00-00'\n            InputLabelProps={{\n              shrink: true,\n            }}\n            inputRef={dateTime}\n          />\n          <BtnGroup>\n            <Button\n              variant='contained'\n              style={{ marginRight: '50px' }}\n              onClick={() => {\n                console.log(dateTime.current.value);\n              }}\n            >\n              검색\n            </Button>\n\n          </BtnGroup>\n        </Modal>\n      </Container>\n  \n    </>\n  );\n}\n\nconst Container = styled.div`\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Modal = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  padding: 24px 50px;\n  border-radius: 4px;\n  width: 800px;\n  height: 400px;\n  box-sizing: border-box;\n  z-index: 10;\n  & h1 {\n    text-align: center;\n    color: #af7ac5;\n  }\n\n  & Button {\n    min-width: 200px;\n  }\n`;\nconst BtnGroup = styled.div`\n  margin: 0 auto;\n  @media only screen and (max-width: 768px) {\n    & Button {\n      width: 100%;\n    }\n  }\n`;\n\nexport default CalendarFind;\n","import React, {useEffect} from \"react\";\nimport { withRouter } from 'react-router';\nimport { Route, Switch} from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport Auth from \"../routes/Auth\";\n// import Navigation from \"./Navigation\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { Fab } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Person from '@material-ui/icons/Person';\nimport styled from 'styled-components';\nimport Calendar from '../Calendar';\n// import Upload from '../routes/Upload';\nimport Detail from '../routes/Detail';\nimport Profile from '../routes/Profile';\nimport Chat from '../routes/Chat';\n// import NotFound from '../NotFound';\nimport CalendarFind from '../CalendarFind';\nimport SendBird from 'sendbird';\n\nconst AppRouter = (props) =>{\n\n  useEffect (()=> {\n    console.log(props.isLoggedIn);\n    UserJoinedChannels();\n\n  })\n\n  const data = useSelector((state) => state.calendar.list);\n\n  const data_list = data.map((val) => {\n    return {\n      title: val.title,\n      date: val.date,\n      publicId: val.id,\n      completed: val.completed,\n      color: val.completed ? '#E74C3C' : '#ABEBC6',\n    };\n  });\n\n \n\n\n// get user's channel list\n  const UserJoinedChannels = async () => {\n\n    if(props.isLoggedIn) {\n    var sb = new SendBird({appId: \"955C3A3C-AAB3-453E-B6C2-FC26DB354F2E\", localCacheEnabled: true })\n\n    await sb.connect(props.userObj.email, function(user, error) {\n      if (error) {\n          // Handle error.\n      }\n  });\n\n  var listQuery = sb.GroupChannel.createMyGroupChannelListQuery();\n    listQuery.includeEmpty = true;\n    listQuery.userIdsIncludeFilter = [''];\n    listQuery.next(function(groupChannels, error) {\n        if (error) {\n            // Handle error.\n        }\n\n        const myEventList = groupChannels.map((e) => {\n          return {\n            chatUrl: e.url,\n          }\n        })\n\n        localStorage.setItem('userChatUrl', JSON.stringify(myEventList));\n        console.log(myEventList);\n        \n  \n        // Through \"groupChannels\" parameter of the callback function, which Sendbird server has passed a result list to,\n        // a list of group channels that have 'Sendbird' in their names is returned.\n    });\n\n  }\n  }\n\n  return(\n    \n      \n      <Switch>\n        {props.isLoggedIn ? ( \n          <div>\n            <Route path='/' exact>\n              <Calendar history={props.history} userObj={props.userObj}/>\n              <PositionBtnChat>\n                <Fab\n                  color='secondary'\n                  aria-label='add'\n                  onClick={() => {\n                    props.history.push('/chat');\n                  }}\n                >\n                  <ChatIcon />\n                </Fab>\n              </PositionBtnChat>\n              <PositionBtnProfile>\n                <Fab\n                  color='primary'\n                  aria-label='add'\n                  onClick={() => {\n                    props.history.push('/profile');\n                  }}\n                >\n                  <Person />\n                </Fab>\n              </PositionBtnProfile>\n\n              <CalendarViewBtn>\n                <Fab\n                  variant='extended'\n                  onClick={UserJoinedChannels}\n                >\n                  <SearchIcon />\n                  <p style={{ fontSize: '1rem' }}>새로운 이벤트 찾기</p>\n                </Fab>\n              </CalendarViewBtn>\n            </Route>\n          <Route path='/profile' render={() => <Profile userObj={props.userObj} refreshUser={props.refreshUser}/>} />\n          <Route path='/detail/:defid' component={Detail} exact />\n          <Route path='/calendarfind' component={CalendarFind} />\n          {/* <Route path='/upload' render={() => <Upload userObj={props.userObj} planning={props.userObj.uid} />} /> */}\n          <Route path=\"/chat\" render={() => <Chat userObj={props.userObj} />} />\n          {/* <Route component={NotFound} /> */}\n          </div> \n          ): (\n            <>\n              <Route exact path=\"/\" >\n                <Auth />\n              </Route>\n            </>\n        )}\n      </Switch>\n   \n  )\n}\n\nconst PositionBtnChat = styled.div`\n  position: fixed;\n  top: 80%;\n  right: 30px;\n  z-index: 10;\n  @media only screen and (max-width: 768px) {\n    top: 60%;\n    left: 10px;\n    & p {\n      display: none;\n    }\n  }\n`;\n\n// const PositionBtnUpload = styled.div`\n//   position: fixed;\n//   top: 70%;\n//   right: 30px;\n//   z-index: 10;\n//   @media only screen and (max-width: 768px) {\n//     top: 70%;\n//     left: 10px;\n//   }\n// `;\n\nconst PositionBtnProfile = styled.div`\n  position: fixed;\n  top: 90%;\n  right: 30px;\n  z-index: 10;\n  @media only screen and (max-width: 768px) {\n    top: 90%;\n    left: 10px;\n  }\n`;\n\nconst CalendarViewBtn = styled.div`\n  position: fixed;\n  top: 0;\n  right: 10px;\n  z-index: 10;\n  @media only screen and (max-width: 768px) {\n    top: 80%;\n    left: 10px;\n    & p {\n      display: none;\n    }\n  }\n`;\nexport default withRouter(AppRouter);","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"./Router\"\nimport {authService} from \"../firebase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=> {\n      if(user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          email: user.email,\n        });\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    })\n  }, [isLoggedIn])\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      email: user.email,\n    });\n  };\n\n  \n  return (\n    <>\n      {init? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObj={userObj}/> : \"Initializing..\"}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport calendar from './modules/calendar';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\n\nexport const history = createBrowserHistory();\n\nconst middlewawres = [thunk];\n\nconst enhancer = applyMiddleware(...middlewawres);\n\nconst rootReducer = combineReducers({ calendar });\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/configStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}